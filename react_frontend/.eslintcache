[{"C:\\Users\\sanme\\Documents\\nba_call_evaluation_ReactFrontEnd_PythonFlaskGoogleAppEngineBackend_website\\react_frontend\\src\\App.js":"1","C:\\Users\\sanme\\Documents\\nba_call_evaluation_ReactFrontEnd_PythonFlaskGoogleAppEngineBackend_website\\react_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\sanme\\Documents\\nba_call_evaluation_ReactFrontEnd_PythonFlaskGoogleAppEngineBackend_website\\react_frontend\\src\\components\\basic.table.js":"3","C:\\Users\\sanme\\Documents\\nba_call_evaluation_ReactFrontEnd_PythonFlaskGoogleAppEngineBackend_website\\react_frontend\\src\\index.js":"4"},{"size":10117,"mtime":1609051152931,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1607398167777,"results":"7","hashOfConfig":"6"},{"size":9762,"mtime":1609051208954,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1607398167777,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1yv84e0",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sanme\\Documents\\nba_call_evaluation_ReactFrontEnd_PythonFlaskGoogleAppEngineBackend_website\\react_frontend\\src\\App.js",["20","21","22","23","24","25","26"],"import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport scottFosterCp3 from './images/scottFosterCp3.jpg';\nimport './App.css';\nimport SortingTableComponent from './components/basic.table';\nimport { Chart } from \"react-google-charts\";\n\nclass RefereeingUI extends React.Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tplayerwiseJsonOutputObject: [{\n\t\t\t\t\"Committing_CC\": \"\",\n\t\t\t\t\"Committing_CNC\": \"\",\n\t\t\t\t\"Committing_IC\": \"\",\n\t\t\t\t\"Committing_INC\": \"\",\n\t\t\t\t\"Disadvantaged_CC\": \"\",\n\t\t\t\t\"Disadvantaged_CNC\": \"\",\n\t\t\t\t\"Disadvantaged_IC\": \"\",\n\t\t\t\t\"Disadvantaged_INC\": \"\",\n\t\t\t\t\"PlayerName\": \"\",\n\t\t\t\t\"num_errors_against\": \"\",\n\t\t\t\t\"num_errors_in_favor\": \"\",\n\t\t\t\t\"percent_errors_against\": \"\",\n\t\t\t\t\"percent_errors_in_favor\": \"\"\n\t\t\t}],\n\t\t\tteamwiseJsonOutputObject: [{\n\t\t\t\t\"Committing_CC\": \"\",\n\t\t\t\t\"Committing_CNC\": \"\",\n\t\t\t\t\"Committing_IC\": \"\",\n\t\t\t\t\"Committing_INC\": \"\",\n\t\t\t\t\"Disadvantaged_CC\": \"\",\n\t\t\t\t\"Disadvantaged_CNC\": \"\",\n\t\t\t\t\"Disadvantaged_IC\": \"\",\n\t\t\t\t\"Disadvantaged_INC\": \"\",\n\t\t\t\t\"PlayerName\": \"\",\n\t\t\t\t\"num_errors_against\": \"\",\n\t\t\t\t\"num_errors_in_favor\": \"\",\n\t\t\t\t\"percent_errors_against\": \"\",\n\t\t\t\t\"percent_errors_in_favor\": \"\"\n\t\t\t}],\n\t\t\tcounter: 0,\n\t\t\tteamOrPlayer: \"Player\",\n\t\t\tteamOrPlayerName: \"\",\n\t\t\tcheating: {disadvantaged: null, commiting: null, totalPercentage: null},\n\t\t\tprotecting: {disadvantaged: null, commiting: null, totalPercentage: null},\n\t\t\tpercentErrorsAgainstVsNumErrorsAgainst: []\n\t\t};\n\t\tthis.callApi = this.callApi.bind(this);\n\t\tthis.handleChangeTeamOrPlayerName = this.handleChangeTeamOrPlayerName.bind(this);\n\t\tthis.handleChangeTeamOrPlayer = this.handleChangeTeamOrPlayer.bind(this);\n\t\tthis.getSpecificPlayerDetails = this.getSpecificPlayerDetails.bind(this);\n/////\n\t\tconst apiUrl = 'https://original-spider-273806.ue.r.appspot.com/get_player_referee_accuracies_data';\n\t\tfetch(apiUrl)\n\t\t.then((response) => \n\t\tresponse.json()\n\t\t)\n\t\t.then((data) => {\n\t\t\tvar playerwiseJsonOutputObject_temp = JSON.parse(JSON.stringify(data));\n\t\t\tvar teamwiseJsonOutputObject_temp = JSON.parse(JSON.stringify(data));\n\t\t\t\n\t\t\t/*\n\t\t\tplayerwiseJsonOutputObject_temp.forEach(function (element, index, array) {\n\t\t\t\telement.pointsLostByReferee = (element.num_errors_against - element.num_errors_in_favor) * 2;\n\t\t\t\tif (element.PlayerName.split(' ').length ===  1 || element.PlayerName.match(/^ *$/) !== null){\n\t\t\t\t\tarray.splice(index, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\tteamwiseJsonOutputObject_temp.forEach(function (element, index, array) {\n\t\t\t\telement.pointsLostByReferee = (element.num_errors_against - element.num_errors_in_favor) * 2;\n\t\t\t\tif (element.PlayerName.split(' ').length !==  1 || element.PlayerName.match(/^ *$/) !== null){\n\t\t\t\t\tarray.splice(index, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tthis.setState({playerwiseJsonOutputObject: playerwiseJsonOutputObject_temp,\n\t\t\tteamwiseJsonOutputObject: teamwiseJsonOutputObject_temp,\n\t\t\tcounter: this.state.counter+1,\n\t\t\t});\n\t\t\tconsole.log(\"teamwise\")\n\t\t\tconsole.log(teamwiseJsonOutputObject_temp)\n\t\t\tconsole.log(this.state.teamwiseJsonOutputObject)\n\t\t\t*/\n\t\t\t\n\t\t\tteamwiseJsonOutputObject_temp.slice().reverse().forEach(function(element2, index, object) {\n\t\t\t\telement2.pointsLostByReferee = (element2.num_errors_against - element2.num_errors_in_favor) * 2;\n\t\t\t\tif (element2.PlayerName.split(' ').length !==  1 || element2.PlayerName.match(/^ *$/) !== null){\n\t\t\t\t\t//console.log(element.PlayerName);\n\t\t\t\t\tteamwiseJsonOutputObject_temp.splice(object.length - 1 - index, 1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t//console.log(element.PlayerName);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tplayerwiseJsonOutputObject_temp.slice().reverse().forEach(function(element2, index, object) {\n\t\t\t\telement2.pointsLostByReferee = (element2.num_errors_against - element2.num_errors_in_favor) * 2;\n\t\t\t\tif (element2.PlayerName.split(' ').length ===  1 || element2.PlayerName.match(/^ *$/) !== null){\n\t\t\t\t\t//console.log(element.PlayerName);\n\t\t\t\t\tplayerwiseJsonOutputObject_temp.splice(object.length - 1 - index, 1);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t//console.log(element.PlayerName);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t/*\n\t\t\tvar percentErrorsAgainstVsNumErrorsAgainst_temp = []\n\t\t\tthis.state.playerwiseJsonOutputObject.forEach(function(currentValue, index, array ) {\n\t\t\t\tpercentErrorsAgainstVsNumErrorsAgainst_temp.push([currentValue.percent_errors_against, currentValue.num_errors_against, currentValue.PlayerName]);\n\t\t\t});\n\t\t\t*/\n\t\t\t\n\t\t\tthis.setState({\n\t\t\tplayerwiseJsonOutputObject: playerwiseJsonOutputObject_temp,\n\t\t\tteamwiseJsonOutputObject: teamwiseJsonOutputObject_temp,\n\t\t\tcounter: this.state.counter+1,\n\t\t\t});\n\t\t\t\n\t\t\tconsole.log(\"teamwise\");\n\t\t\tconsole.log(teamwiseJsonOutputObject_temp);\n\t\t\tvar index = 1;\n\t\t\tconsole.log(this.state.teamwiseJsonOutputObject);\n\t\t\t// var element = teamwiseJsonOutputObject_temp[index];\n\t\t\t// console.log(element.PlayerName.split(' ').length);\n\t\t    // console.log((element.PlayerName.split(' ').length !==  1 || element.PlayerName.match(/^ *$/) !== null));\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t});\n\n//////\t\n\t}\n\thandleChangeTeamOrPlayerName(event){\n\t\tthis.setState({teamOrPlayerName: event.target.value});\n\t}\n\thandleChangeTeamOrPlayer(event){\n\t\tthis.setState({teamOrPlayer: event.target.value});\n\t\tconsole.log(\"entered handleChangeTeamOrPlayer function\")\n\t}\n\t\n\tdata_table= [\n\t\t['Age', 'Weight'],\n\t\t[8, 12],\n\t\t[4, 5.5],\n\t\t[11, 14],\n\t\t[4, 5],\n\t\t[3, 3.5],\n\t\t[6.5, 7],\n\t]\n  \n\t// function getDataFromApi(url) {\n\t\t// return p1 * p2;   // The function returns the product of p1 and p2\n\t// }\n\t\n\tcallApi(){\n\t\tconst apiUrl = 'https://original-spider-273806.ue.r.appspot.com/get_player_referee_accuracies_data';\n\t\tfetch(apiUrl)\n\t\t.then((response) => \n\t\tresponse.json()\n\t\t)\n\t\t.then((data) => {\n\t\t\tconsole.log('This is your data', data);\n\t\t\tconsole.log(typeof data);\n\t\t\tconsole.log(Object.getOwnPropertyNames(data));\n\t\t\t// console.log(data[0].gameId);\n\t\t\t// console.log(typeof data[0].gameId);\n\t\t\tthis.setState({playerwiseJsonOutputObject: data,\n\t\t\tcounter: this.state.counter+1,\n\t\t\t});\n\t\t});\n\t}\n\t\n\tgetSpecificPlayerDetails(player_referee_accuracies_object){\n\t\tconsole.log(player_referee_accuracies_object.PlayerName);\n\t\t\n\t\tvar percentErrorsAgainstVsNumErrorsAgainst_temp = [[\"X\", \"Y\", {role: \"style\", type: \"string\"}, { role: \"tooltip\", type: \"string\", p: { html: true } }]]\n\t\tif (this.state.teamOrPlayer == \"Player\"){\n\t\t\tvar arrayTemp = this.state.playerwiseJsonOutputObject\n\t\t}\n\t\telse{\n\t\t\tvar arrayTemp = this.state.teamwiseJsonOutputObject\n\t\t}\n\t\tarrayTemp.forEach(function(currentValue, index, array ) {\n\t\t\tvar str = \"\";\n\t\t\tif (currentValue.PlayerName == player_referee_accuracies_object.PlayerName){\n\t\t\t\tpercentErrorsAgainstVsNumErrorsAgainst_temp.push([currentValue.num_errors_against, currentValue.percent_errors_against, 'point { size: 18; shape-type: star; fill-color: #a52714; }', str.concat(\"player = \", currentValue.PlayerName, \", num = \", currentValue.num_errors_against.toString(), \", % = \", currentValue.percent_errors_against.toString())]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tpercentErrorsAgainstVsNumErrorsAgainst_temp.push([currentValue.num_errors_against, currentValue.percent_errors_against, 'blue', str.concat(\"player = \", currentValue.PlayerName, \", num = \", currentValue.num_errors_against.toString(), \", % = \", currentValue.percent_errors_against.toString())]);\n\t\t\t}\n\t\t});\n\t\t\n\t\tthis.setState({\n\t\t\tpercentErrorsAgainstVsNumErrorsAgainst: percentErrorsAgainstVsNumErrorsAgainst_temp,\n\t\t\tteamOrPlayerName: player_referee_accuracies_object.PlayerName\n\t\t});\n\t}\n\t\n  render() {\n\treturn (\n\t\t<div className=\"Parent\">\n\t\t\t<div className=\"table\">\n\t\t\t\t<h3>How much NBA players are impacted by Referees</h3>\n\t\t\t\t< img src={scottFosterCp3} width=\"600\" height=\"338\" />\n\t\t\t\t<div>\n\t\t\t\t\t<strong>Make a selection of Player or Team in the dropdown below to see the table full of players or teams, and the referee adverse impact on them. \n\t\t\t\t\t\tYou can sort the table by the fields by clicking on the fields. You can also filter out specific teams and players by typing in the dropdown\n\t\t\t\t\t\tbelow. You can also click on a row to see player or team specific info below the table.\n\t\t\t\t\t</strong>\n\t\t\t\t</div>\n\t\t\t\t<SortingTableComponent clickOnRowFunc={this.getSpecificPlayerDetails} submitButtonEvent={this.getSpecificPlayerDetails} onChangeTextboxFunc={this.handleChangeTeamOrPlayerName} onChangeFunc={this.handleChangeTeamOrPlayer} stateOfDropdown={this.state.teamOrPlayer} data={(this.state.teamOrPlayer == 'Player') ? this.state.playerwiseJsonOutputObject : this.state.teamwiseJsonOutputObject}/>\n\t\t\t</div>\n\t\t\t<div className=\"RefereeingInput\">\n\t\t\t\t{/*\n\t\t\t\t<h1> {this.state.text} </h1>\n\t\t\t\t<h1> {this.state.teamOrPlayer} </h1>\n\t\t\t\t<h1> {this.state.teamOrPlayerName} </h1>\n\t\t\t\t*/}\n\t\t\t\t{/*\n\t\t\t\t<select className=\"teamOrPlayer\" value={this.state.teamOrPlayer} onChange={this.handleChangeTeamOrPlayer}>\n\t\t\t\t\t<option value=\"Player\">Player</option>\n\t\t\t\t\t<option value=\"Team\">Team</option>\n\t\t\t\t</select>\n\t\t\t\t<input className=\"teamOrPlayerName\" size=\"20\" type=\"text\" value={this.state.teamOrPlayerName} onChange={this.handleChangeTeamOrPlayerName} />\n\t\t\t\t<button className=\"callApi\" onClick= {this.callApi}> \n\t\t\t\t\t Submit\n\t\t\t\t</button>\n\t\t\t\t*/}\n\t\t\t</div>\n\t\t\t<div className=\"RefereeingAccuracyOutput\">\n\t\t\t\t<Greeting isLoggedIn={this.state.percentErrorsAgainstVsNumErrorsAgainst} playerTeamName = {this.state.teamOrPlayerName}/>\n\t\t\t</div>\n\t\t</div>\n\t);\n  }\n}\n\nfunction Greeting(props) {\n  const isLoggedIn = props.isLoggedIn;\n  console.log(\"Function Greeting\")\n  console.log(isLoggedIn)\n  if (isLoggedIn !== undefined && isLoggedIn.length !== 0) {\n    return (\n\t\t<div>\n\t\t\t<h1> {props.playerTeamName} </h1>\n\t\t\t<Chart\n\t\t\t  width={'600px'}\n\t\t\t  height={'400px'}\n\t\t\t  chartType=\"ScatterChart\"\n\t\t\t  loader={<div>Loading Chart</div>}\n\t\t\t  data={isLoggedIn}  \n\t\t\t  options={{\n\t\t\t\ttitle: '% errors against vs. num errors against',\n\t\t\t\thAxis: { title: 'num errors against', minValue: 0, maxValue: 12 },\n\t\t\t\tvAxis: { title: '% errors against', minValue: 0, maxValue: 60 },\n\t\t\t\tlegend: 'none',\n\t\t\t  }}\n\t\t\t  rootProps={{ 'data-testid': '1' }}\n\t\t\t/>\n\t\t</div>\n\t);\n  }\n  else{\n\treturn (\n\t\t\"Nothing\"\n\t);\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\t\t<RefereeingUI > </RefereeingUI >\n      </div>\n    );\n  }\n}\nexport default App;","C:\\Users\\sanme\\Documents\\nba_call_evaluation_ReactFrontEnd_PythonFlaskGoogleAppEngineBackend_website\\react_frontend\\src\\reportWebVitals.js",[],"C:\\Users\\sanme\\Documents\\nba_call_evaluation_ReactFrontEnd_PythonFlaskGoogleAppEngineBackend_website\\react_frontend\\src\\components\\basic.table.js",["27","28","29","30","31","32","33","34","35","36"],"// src/components/sorting.table.js\r\nimport React from \"react\";\r\n\r\nimport { useTable, useSortBy, usePagination, useFilters, useGlobalFilter, useAsyncDebounce} from 'react-table'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Define a default UI for filtering\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n\tonChangeTextboxFunc\r\n}) {\r\n    const count = preGlobalFilteredRows.length\r\n    const [value, setValue] = React.useState(globalFilter)\r\n    const onChange = useAsyncDebounce(value => {\r\n        setGlobalFilter(value || undefined)\r\n    }, 200)\r\n\r\n    return (\r\n        <span>\r\n            <input\r\n                value={value || \"\"}\r\n                onChange={e => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value);\r\n\t\t\t\t\tconsole.log(\"GlobalFilter\")\r\n\t\t\t\t\tconsole.log(typeof onChangeTextboxFunc);\r\n\t\t\t\t\t//onChangeTextboxFunc(e);\r\n                }}\r\n                placeholder={'Enter Player Name...'}\r\n\t\t\t\tstyle={{ width: '500px', height: '30px' }}\r\n            />\r\n        </span>\r\n    )\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n    column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n    const count = preFilteredRows.length\r\n\r\n    return (\r\n        <input\r\n            className=\"form-control\"\r\n            value={filterValue || ''}\r\n            onChange={e => {\r\n                setFilter(e.target.value || undefined)\r\n            }}\r\n            placeholder={'Search ${count} records...'}\r\n        />\r\n    )\r\n}\r\n\r\nfunction Table({ clickOnRowFunc, columns, data, onChangeFunc, stateOfDropdown, onChangeTextboxFunc, submitButtonEvent }) {\r\n    // Use the state and functions returned from useTable to build your UI\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Default Filter UI\r\n            Filter: DefaultColumnFilter,\r\n        }),\r\n        []\r\n    )\r\n\r\n\t\r\n\t\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n\t\t////////\r\n\t\tpage,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n\t\tpreGlobalFilteredRows,\r\n        setGlobalFilter,\r\n\t\tstate: { pageIndex, pageSize, globalFilter},\r\n\t\t////////\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n\t\t\tdefaultColumn,\r\n\t\t\tinitialState: { pageIndex: 0, pageSize: 5 },\r\n        },\r\n\t\tuseFilters,\r\n        useGlobalFilter,\r\n\t\tuseSortBy,\r\n\t\tusePagination,\r\n    )\r\n\r\n    // Render the UI for your table\r\n    return (\r\n        <div>\r\n\t\t{/*\r\n\t\t\t<pre>\r\n                <code>\r\n                    {JSON.stringify(\r\n                        {\r\n                            pageIndex,\r\n                            pageSize,\r\n                            pageCount,\r\n                            canNextPage,\r\n                            canPreviousPage,\r\n                        },\r\n                        null,\r\n                        1\r\n                    )}\r\n                </code>\r\n            </pre>\r\n\t\t*/}\r\n\t\t    <select className=\"teamOrPlayer\" value={stateOfDropdown} onChange={onChangeFunc}>\r\n\t\t\t\t<option value=\"Player\">Player</option>\r\n\t\t\t\t<option value=\"Team\">Team</option>\r\n\t\t\t</select>\r\n\t\t\t<GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n\t\t\t\tonChangeTextboxFunc = {onChangeTextboxFunc}\r\n            />\r\n\t\t\t{/*\r\n\t\t\t<button className=\"callApi\" onClick={submitButtonEvent}> \r\n\t\t\t\tSubmit\r\n\t\t\t</button>\r\n\t\t\t*/}\r\n            <table className=\"table\" {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                // Add the sorting props to control sorting. For this example\r\n                                // we can add them into the header props\r\n                                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                                    {column.render('Header')}\r\n                                    {/* Add a sort direction indicator */}\r\n\t\t\t\t\t\t\t\t\t{/*<div>{column.canFilter ? column.render('Filter') : null}</div> */}\r\n                                    <span>\r\n                                        {column.isSorted\r\n                                            ? column.isSortedDesc\r\n                                                ? ' 🔽'\r\n                                                : ' 🔼'\r\n                                            : ''}\r\n                                    </span>\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map(\r\n                        (row, i) => {\r\n                            prepareRow(row);\r\n                            return (\r\n                                <tr {...row.getRowProps()} onClick={() => clickOnRowFunc(row.original)}>\r\n                                    {row.cells.map(cell => {\r\n                                        return (\r\n                                            <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                        )\r\n                                    })}\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n            <br />\r\n            <ul className=\"pagination\">\r\n                <li className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                    <a className=\"page-link\">First</a>\r\n                </li>\r\n                <li className=\"page-item\" onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    <a className=\"page-link\">{'<'}</a>\r\n                </li>\r\n                <li className=\"page-item\" onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    <a className=\"page-link\">{'>'}</a>\r\n                </li>\r\n                <li className=\"page-item\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                    <a className=\"page-link\">Last</a>\r\n                </li>\r\n                <li>\r\n                    <a className=\"page-link\">\r\n                        Page{' '}\r\n                        <strong>\r\n                            {pageIndex + 1} of {pageOptions.length}\r\n                        </strong>{' '}\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    <a className=\"page-link\">\r\n                        <input\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                            defaultValue={pageIndex + 1}\r\n                            onChange={e => {\r\n                                const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                                gotoPage(page)\r\n                            }}\r\n                            style={{ width: '100px', height: '20px' }}\r\n                        />\r\n                    </a>\r\n                </li>{' '}\r\n                <select\r\n                    className=\"form-control\"\r\n                    value={pageSize}\r\n                    onChange={e => {\r\n                        setPageSize(Number(e.target.value))\r\n                    }}\r\n                    style={{ width: '120px', height: '38px' }}\r\n                >\r\n                    {[5, 10, 20, 30, 40, 50].map(pageSize => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            Show {pageSize}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </ul>\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction SortingTableComponent({ data, onChangeFunc, stateOfDropdown, onChangeTextboxFunc, submitButtonEvent, clickOnRowFunc }) {\r\n    // data.forEach(function (element, index, array) {\r\n\t\t// element.pointsLostByReferee = (element.num_errors_against - element.num_errors_in_favor) * 2;\r\n\t\t// if (element.PlayerName.split(' ').length ==  1 || element.PlayerName.match(/^ *$/) !== null){\r\n\t\t\t// array.splice(index, 1);\r\n\t\t// }\r\n\t// });\r\n\tconst columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Top Players Disadvantaged by Referees',\r\n                columns: [\r\n                    {\r\n                        Header: 'Player',\r\n                        accessor: 'PlayerName',\r\n                    },\r\n\t\t\t\t\t{\r\n                        Header: '# Errors Against',\r\n                        accessor: 'num_errors_against',\r\n                    },\r\n                    {\r\n                        Header: '% Errors Against',\r\n                        accessor: 'percent_errors_against',\r\n                    },\r\n                    {\r\n                        Header: 'Net Points Lost To Referees',\r\n                        accessor: 'pointsLostByReferee',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    // console.log(JSON.stringify(data));\r\n\tconsole.log(\"SortingTableComponent\")\r\n\tconsole.log(typeof onChangeFunc)\r\n\tconsole.log(typeof onChangeTextboxFunc)\r\n\r\n    return (\r\n<Table clickOnRowFunc={clickOnRowFunc} columns={columns} data={data} onChangeTextboxFunc={onChangeTextboxFunc} onChangeFunc={onChangeFunc} stateOfDropdown={stateOfDropdown} submitButtonEvent={submitButtonEvent}/>\r\n    )\r\n}\r\n\r\nexport default SortingTableComponent;","C:\\Users\\sanme\\Documents\\nba_call_evaluation_ReactFrontEnd_PythonFlaskGoogleAppEngineBackend_website\\react_frontend\\src\\index.js",[],{"ruleId":"37","severity":1,"message":"38","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":125,"column":8,"nodeType":"39","messageId":"40","endLine":125,"endColumn":13},{"ruleId":"42","severity":1,"message":"43","line":181,"column":31,"nodeType":"44","messageId":"45","endLine":181,"endColumn":33},{"ruleId":"46","severity":1,"message":"47","line":185,"column":8,"nodeType":"39","messageId":"48","endLine":185,"endColumn":17},{"ruleId":"42","severity":1,"message":"43","line":189,"column":32,"nodeType":"44","messageId":"45","endLine":189,"endColumn":34},{"ruleId":"49","severity":1,"message":"50","line":208,"column":5,"nodeType":"51","endLine":208,"endColumn":59},{"ruleId":"42","severity":1,"message":"43","line":215,"column":299,"nodeType":"44","messageId":"45","endLine":215,"endColumn":301},{"ruleId":"37","severity":1,"message":"52","line":14,"column":11,"nodeType":"39","messageId":"40","endLine":14,"endColumn":16},{"ruleId":"37","severity":1,"message":"52","line":41,"column":11,"nodeType":"39","messageId":"40","endLine":41,"endColumn":16},{"ruleId":"53","severity":1,"message":"54","line":50,"column":26,"nodeType":"55","messageId":"56","endLine":50,"endColumn":54},{"ruleId":"37","severity":1,"message":"57","line":71,"column":9,"nodeType":"39","messageId":"40","endLine":71,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":178,"column":21,"nodeType":"51","endLine":178,"endColumn":46},{"ruleId":"58","severity":1,"message":"59","line":181,"column":21,"nodeType":"51","endLine":181,"endColumn":46},{"ruleId":"58","severity":1,"message":"59","line":184,"column":21,"nodeType":"51","endLine":184,"endColumn":46},{"ruleId":"58","severity":1,"message":"59","line":187,"column":21,"nodeType":"51","endLine":187,"endColumn":46},{"ruleId":"58","severity":1,"message":"59","line":190,"column":21,"nodeType":"51","endLine":190,"endColumn":46},{"ruleId":"58","severity":1,"message":"59","line":198,"column":21,"nodeType":"51","endLine":198,"endColumn":46},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'index' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'arrayTemp' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'count' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'rows' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]